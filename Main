--loadstring(game:HttpGet(('https://raw.githubusercontent.com/TheHolyThicc/EmpireClashAntiCheat/main/Main'),true))()

if game.PlaceId == 9588998913 then

	rconsolename("Disable anticheat")
	rconsoleprint('@@YELLOW@@')
	rconsoleprint("Waiting For Client AnitExploit, this should take no longer than 30 seconds")

	spawn(function()
		rconsoleprint("\nChecking game version")
		local Version = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Updated
		if tostring(Version) ~= "2022-11-01T20:03:24.45Z" then
			rconsoleprint('@@RED@@')
			rconsoleprint("\nNEW GAME VERSION DETECTED, THERE COULD BE UPDATES THAT WILL GET YOU BANNED\nScript version: [2022-10-29T21:12:41.984274Z] Game version ["..tostring(Version).."]")
		else
			rconsoleprint('@@YELLOW@@')
			rconsoleprint("\nGame version and script version are the same")
		end
	end)

	local knitModule = game:GetService("ReplicatedStorage"):WaitForChild("Knit")

	repeat wait() until game.Players.LocalPlayer ~= nil

	local plr = game.Players.LocalPlayer

	local found = false
	local PlsDontUseThese = {}

	repeat 
		for index, connection in pairs(getconnections(game:GetService("ScriptContext").Error)) do
			local intendedScript = getfenv(connection.Function).script
			if intendedScript and intendedScript.Name ~= "GoogleAnalyticsHelper" then
				table.insert(PlsDontUseThese, intendedScript)
			end
		end
		wait(2)
	until #PlsDontUseThese >= 2

	local Knit = require(knitModule)
	local anticheat = Knit.GetService("IntegrityService")


	local function disableConnection(connection, index, event)
		rconsoleprint("@@RED@@")
		local intendedScript = getfenv(connection.Function).script
		if intendedScript and (table.find(PlsDontUseThese, intendedScript) ~= nil or intendedScript.Name == "ClientRemoteSignal" and event) then
			connection:Disable()
			rconsoleprint("@@GREEN@@")
			return "\nConnection "..tostring(index).." was disabled in "..intendedScript.Name
		end
	end
 
	rconsoleprint('@@YELLOW@@')
	rconsoleprint("\nLoading events, make sure at least "..tostring(2).." connections get disbaled before trying anything")

	local events = false
	local WeDoNotLikeThese = {}

	for index,v in pairs(anticheat) do
		if v["_remote"] ~= nil then
			events = true
			table.insert(WeDoNotLikeThese, v["_remote"])
			for i,connection in pairs(getconnections(v["_remote"].OnClientEvent)) do local returned, status = pcall(disableConnection, connection, index, true) rconsoleprint(returned == true and status or returned == false and "\nConnection "..index.." returned an error. "..tostring(status)) end
		end
	end
	if events == false then
		plr:Kick("Something went wrong when loading events")
	end

	local intentedConnections = {
		plr.CharacterAdded,
		game:GetService("ScriptContext").Error,
		plr.Backpack.ChildAdded,
		game.ChildAdded,
		workspace:GetPropertyChangedSignal("Gravity")
	}

	rconsoleprint('@@YELLOW@@')
	rconsoleprint("\nDisabling connections, make sure at least "..tostring(#intentedConnections).." connections get disbaled before trying anything")


	for index, connection in pairs(intentedConnections) do
		for i,v in pairs(getconnections(connection)) do
			local returned, status = pcall(disableConnection, v, index)
			rconsoleprint(returned == true and status or returned == false and "\nConnection "..index.." returned an error. "..tostring(status) or "")
		end
	end



	repeat wait(1) until game:GetService("CoreGui"):FindFirstChild("LoadingScreen") == nil and (plr.PlayerGui:FindFirstChild("LocalSaveDataPrompt") == nil or plr.PlayerGui:FindFirstChild("LocalSaveDataPrompt").Frame.Visible == false)
	local NoNoArgs = {'fi', 'gv', 'si', 'hb', 'ws', 'vim}
	local old;
	old = hookmetamethod(game, "__namecall", function(Self, ...)
		if not checkcaller() and getnamecallmethod() == "FireServer" then
			local args = {...}
			if table.find(WeDoNotLikeThese, Self) ~= nil or args[1] ~= nil and table.find(NoNoArgs, args[1]) then
				if args[1] ~= nil then
					rconsoleprint("@@RED@@")
					rconsoleprint("\nAnticheat tried firing ban event "..tostring(args[1])) 
				else
					rconsoleprint("@@RED@@")
					rconsoleprint("\nAnticheat tried firing ban event")
				end
				return nil
			end
		end
		return old(Self, ...)
	end)


	--[[local old2;
	old2 = hookfunction(Instance.new("RemoteEvent").FireServer, function(Self, ...)
		if not checkcaller() then
			local args = {...}
			if args[3] and args[3] == "kick" then
				return nil
			end
		end
		return old2(Self, ...)
	end)


	local old3;
	old3 = hookfunction(game.Players.LocalPlayer.Kick, function(Self, ...)
		if not checkcaller() then
			return nil
		end
		return old3(Self, ...)
	end)]]

	rconsoleprint("@@CYAN@@")
	rconsoleprint("\nDONE, IT IS EXTREMELY RECOMMENDED THAT YOU RESET BEFORE USING EXPLOITS")
end
