--loadstring(game:HttpGet(('https://raw.githubusercontent.com/TheHolyThicc/EmpireClashAntiCheat/main/Main'),true))()
if game.PlaceId == 9588998913 then
	rconsolename("Disable anticheat")
	rconsoleprint('@@YELLOW@@')
	rconsoleprint("Waiting For Client AnitExploit, this should take no longer than 30 seconds")
	spawn(function()
		rconsoleprint("\nChecking game version")
		local Version = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Updated
		if tostring(Version) ~= "2022-10-31T22:28:50.1855274Z" then
			rconsoleprint('@@RED@@')
			rconsoleprint("\nNEW GAME VERSION DETECTED, THERE COULD BE UPDATES THAT WILL GET YOU BANNED\nScript version: [2022-10-29T21:12:41.984274Z] Game version ["..tostring(Version).."]")
		else
			rconsoleprint('@@YELLOW@@')
			rconsoleprint("\nGame version and script version are the same")
		end
	end)
	local knitModule = game:GetService("ReplicatedStorage"):WaitForChild("Knit")
	repeat wait() until game.Players.LocalPlayer ~= nil
	local plr = game.Players.LocalPlayer
	rconsolename("Connection")
	local ScriptContext = game:GetService("ScriptContext")

	local found = false
	repeat wait(2)
		for index, connection in pairs(getconnections(plr.CharacterAdded)) do
			if getfenv(connection.Function).script and getfenv(connection.Function).script.Name == "IntegrityController" then
				found = true
			end
		end
	until found == true

	local Knit = require(knitModule)
	local anticheat = Knit.GetService("IntegrityService")
	local events = false
	local WeDoNotLikeThese = {}
	local intentedConnections = {
		plr.CharacterAdded,
		ScriptContext.Error,
		anticheat.OpenTheDoorGetOnTheFloorEverybodyWalkTheDinosaur["_remote"].OnClientEvent,
		anticheat.VerifyNoclip["_remote"].OnClientEvent,
		plr.Backpack.ChildAdded,
		game.ChildAdded,
		workspace:GetPropertyChangedSignal("Gravity")
	}

	rconsoleprint('@@YELLOW@@')
	rconsoleprint("\nDisabling connections, make sure "..tostring(#intentedConnections).." connections get disbaled before trying anything")
	for index, connection in pairs(intentedConnections) do
		for i,v in pairs(getconnections(connection)) do
			if getfenv(v.Function).script and (getfenv(v.Function).script.Name == "IntegrityController" or getfenv(v.Function).script.Name == "ClientRemoteSignal" and (index == 3 or index == 4)) then
				v:Disable()
				rconsoleprint("@@GREEN@@")
				rconsoleprint("\nConnection "..tostring(index).." was disabled")
			end
		end
	end




	rconsoleprint('@@YELLOW@@')
	rconsoleprint("\nLoading events, wait for the done message")
	plr.Character:WaitForChild("Humanoid")
	for i,v in pairs(anticheat) do
		if v["_remote"] ~= nil then
			events = true
			table.insert(WeDoNotLikeThese, v["_remote"])
		end
	end
	if events == false then
		plr:Kick("Something went wrong when loading events")
	end

	local old;
	old = hookmetamethod(game, "__namecall", function(Self, ...)
		if not checkcaller() and getnamecallmethod() == "FireServer" then
			local args = {...}
			if table.find(WeDoNotLikeThese, Self) ~= nil then
				rconsoleprint("@@RED@@")
				if args[1] ~= nil then
					rconsoleprint("\nAnticheat tried firing ban event "..tostring(args[1])) 
				else
					rconsoleprint("\nAnticheat tried firing ban event")
				end
				return nil
			end
		end
		return old(Self, ...)
	end)


	--[[local old2;
	old2 = hookfunction(Instance.new("RemoteEvent").FireServer, function(Self, ...)
		if not checkcaller() then
			local args = {...}
			if args[3] and args[3] == "kick" then
				return nil
			end
		end
		return old2(Self, ...)
	end)


	local old3;
	old3 = hookfunction(game.Players.LocalPlayer.Kick, function(Self, ...)
		if not checkcaller() then
			return nil
		end
		return old3(Self, ...)
	end)]]

	rconsoleprint("@@GREEN@@")
	rconsoleprint("\nDONE, IT IS EXTREMELY RECOMMENDED THAT YOU RESET BEFORE USING EXPLOITS")
end
